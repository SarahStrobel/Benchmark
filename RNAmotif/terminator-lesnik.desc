parms
        wc+=gu;

descr
        ss(len=11)                                      #1 A-string
        h5(tag='1', minlen=4, maxlen=8) #2 5'-stem
        ss(minlen=3, maxlen=10)                 #3 loop
        h3 (tag='1')                            #4 3'-stem
        ss(minlen=0, maxlen=2, seq="^V*$")      #5 spacer
        ss(len=5, seq="^T")                     #6 T(1-5)-proximal part
        ss(len=3)                                       #7 T(6-9)-distal part 
        ss(len=4)                                       #8 extra T's 

        ### First bp is only GC,CG,or TA ####
sites
        h5 (tag='1', pos=1):h3 (tag='1', pos=$) in {"G:C","C:G","T:A","T:G"}
 
score
        {
                        a=0;
                        b=0;
                        c=0;
                        d=0;
                        e=0;
                        f=0;
                        g=0;

### Sugimoto parameters for hybrid duplexes (Biochemistry 1995,34,11211) #
                        p11=-1.0;      # rAA  /dTT (dG(kcal/mol)
                        p12=-2.1;      # rAC  /dTG
                        p13=-1.8;      # rAG  /dTC
                        p14=-0.9;      # rAU  /dTA
                        p21=-0.9;      # rCA  /dGT
                        p22=-2.1;      # rCC  /dGG
                        p23=-1.7;      # rCG  /dGC
                        p24=-0.9;      # rCU  /dGA
                        p31=-1.3;      # rGA  /dCT
                        p32=-2.7;      # rGC  /dCG
                        p33=-2.9;      # rGG  /dCC
                        p34=-1.1;      # rGU  /dCA
                        p41=-0.6;      # rUA  /dAT
                        p42=-1.5;      # rUC  /dAG
                        p43=-1.6;      # rUG  /dAC
                        p44=-0.2;      # rUU  /dAA 


### At least four (GC/CG/GT/TG) bp should be in a stem ###
                    len2 = length (h5[2]);
                    len4 = length (h3[4]);  
                for (i=1; i<=len2; i++){
                   if (h5[2,i,1]:h3[4,len2-i+1,1] in {"A:T","T:A"}){
                                a++ ;
                   }
                }
                        if (a > (len2-4))

                           REJECT;

                ### Restrictions for T stretch ###

        ## No less than three "T" in proximal part of T-stretch ##
                    len6 = length(ss[6]);
                  for (i=1; i <= len6; i++) {
                        y=ss[6,i,1];
                        if(y=~"T") {
                           b++;
                        }
                  }
                        if (b < 3)

                          REJECT; 

        ## Calculate T's in distal part of T-region ##
                         
                 len7 = length(ss[7]);
                for (j=1; j <= len7; j++) {
                        y=ss[7,j,1]; 
                        if (y=~"T") {
                         c++;
                        }
                 }
        ## If only 3"T"s in proxy-T additional 2"T"s should be in distal-T part ##
                        if ((b ==3) && (c < 2))
                                REJECT;

##If those strings in proxy-T part then five T"s are necessary ##
if (((ss[6]=~"^TVTTT$") || (ss[6]=~"^TTVTT$") || (ss[6]=~"^TTTVT$")) && (c < 2))

                                    REJECT;

        ## No more than 1 "G" in proximal T str ##
                   len6 = length(ss[6]);
                 for (i=2; i <= len6; i++) {
                        y=ss[6,i,1]; 
                        if (y=~"G") {
                            d++;
                        }
                  }      
                        if (d >= 2)
                          REJECT;

        ## No more than 1 "C" in proximal T str ##
                   len6 = length(ss[6]);
                 for (i=2; i <= len6; i++) {
                        y=ss[6,i,1]; 
                        if (y=~"C") {
                            g++;
                        }
                  }      
                        if (g >= 2)
                          REJECT;

        ## No V-strings in proximal T-str if it starts from "TVV" ##
                        if (ss[6]=~"^TVV") 
                          REJECT;

        ## No four Pu or four "C" in distal T's ##

                if ((ss[7] =~"^RRRR$") || (ss[7]=~"^CCCC$"))
                        REJECT;  

        {
            ### Scores for A-strings ###
                        A_score =0.0;

                 len1=length(ss[1]);
                for (i=1; i<=len1; i++){
                     y=ss[1,i,1];
                      if (y=~"A"){
                          e++;
                      }
                }
                        A_score = e;
        }

        {
          #  Score for a stem == number of b.p. in a stem ## 
                        stem_score =0.0;
                for (i=1; i<=len2; i++) {
  if (h5[2,i,1]:h3[4,len2-i+1,1] in {"A:T","G:C","C:G","T:A","T:G","G:T"}) {
                          f++;
                     }
                }
                        stem_score = f; 
        }                

        {
                   ### Score for loops ### 
                       loop_score = 0.0;

                     len3=length(ss[3]);
                     loop_score = len3;
        }

        {
           ### Free energy and score=dG for a hairpin ###
                        hairpin_score = 0.0;

                        x=efn(h5[2], h3[4]);
                           hairpin_score = x;

                           if ( x > 0.0)
                                REJECT;
        }

        {
           ### Free energy and score=dG for a spacer ###
                        spacer_score = 0.0;

                        len5=length(ss[5]);
                    if ((len5==1) && (ss[5] =~"^A$")){
                        dG=p14;
                        spacer_score =dG;
                    }
                    else if ((len5==1) && (ss[5] =~"^C$")){
                                dG=p24;
                                spacer_score =dG;
                    }
                    else if ((len5==1) && (ss[5] =~"^G$")){ 
                        dG=p34;
                        spacer_score =dG;
                    }


                    if ((len5==2) && (ss[5] =~"^AA$")){
                        dG=p11+p14;
                        spacer_score =dG;
                    }
                    else if ((len5==2) && (ss[5] =~"^AC$")){
                        dG=p12+p24;
                        spacer_score =dG;
                    }
                    else if ((len5==2) && (ss[5] =~"^AG$")){
                        dG=p13+p34;
                        spacer_score =dG;
                    } 


                    else if ((len5==2) && (ss[5] =~"^CA$")){
                        dG=p21+p14;
                        spacer_score =dG;
                    }
                    else if ((len5==2) && (ss[5] =~"^CC$")){
                        dG=p22+p24;
                        spacer_score =dG;
                    }
                    else if ((len5==2) && (ss[5] =~"^CG$")){
                        dG=p23+p34;
                        spacer_score =dG;
                    } 

                   
                    else if ((len5==2) && (ss[5] =~"^GA$")){
                        dG=p31+p14;
                        spacer_score =dG;
                    }
                    else if ((len5==2) && (ss[5] =~"^GC$")){
                        dG=p32+p24;
                        spacer_score =dG;
                    }
                    else if ((len5==2) && (ss[5] =~"^GG$")){
                        dG=p33+p34;
                        spacer_score =dG;
                    }           
        }

        ### Free energy and score=dG for a proximal part of T-region ###
                        proxy_T_score = 0.0;

                        len6=length(ss[6]);
             for (i=1; i<=(len6-1); i++)    {
                     y=ss[6,i,1];
                     z = ss[6,i+1,1];
            if (y=~"T"){
                  if(z=~"A") {
                        dG=p41;
                        proxy_T_score += dG;
                   }
                   else if(z=~"C") {
                        dG=p42;
                        proxy_T_score += dG;
                   }           
                   else if(z=~"G") {
                        dG=p43;
                        proxy_T_score += dG;
                   }                     
                   else if(z=~"T") {
                        dG=p44;
                        proxy_T_score += dG;
                   }                                   
              }
              else if (y =~"A"){
                   if(z =~"A") {
                        dG=p11;
                        proxy_T_score += dG;
                   }                     
                   else if(z =~"C") {
                        dG=p12;
                        proxy_T_score += dG;
                   }                     
                   else if(z =~"G") {
                        dG=p13;
                        proxy_T_score += dG;
                   }                     
                   else if(z=~"T") {
                        dG=p14;
                        proxy_T_score += dG;
                   }                             
                }               
                else if (y=~"C")  {
                   if(z=~"A")   {
                        dG=p21;
                        proxy_T_score += dG;
                   }
                   else if(z=~"C") {
                        dG=p22;
                        proxy_T_score += dG;
                   }
                   else if(z=~"G") {
                        dG=p23;
                        proxy_T_score += dG;
                   }
                   else if(z=~"T") {
                        dG=p24;
                        proxy_T_score += dG;
                   }          
                }                
                else if (y=~"G"){
                   if(z=~"A") {
                        dG=p31;
                        proxy_T_score += dG;
                   }
                   else if(z=~"C") {
                        dG=p32;
                        proxy_T_score += dG;
                   }
                   else if(z=~"G") {
                        dG=p33;
                        proxy_T_score += dG;
                   }
                   else if(z=~"T") {
                        dG=p34;
                        proxy_T_score += dG;
                   }          
             }
          }
        }

        { 

       ### Free energy and score=dG for distal part of T-region ###
                        dist_T_score = 0.0;

                len7=length(ss[7]);

         for (i=1; i<=(len7-1); i++)    {
                 y=ss[7,i,1];
                 z = ss[7,i+1,1];
              if (y=~"T")   {
                      if(z=~"A") {
                        dG=p41;
                        dist_T_score += dG;
                      }
                      else if(z=~"C") {
                        dG=p42;
                        dist_T_score += dG;
                      }
                      else if(z=~"G") {
                        dG=p43;
                        dist_T_score += dG;
                      }
                      if(z=~"T") {
                        dG=p44;
                        dist_T_score += dG;
                      }
               }
                 else if (y=~"A"){
                      if(z=~"A") {
                        dG=p11;
                        dist_T_score += dG;
                      }
                      else if(z=~"C") {
                        dG=p12;
                        dist_T_score += dG;
                      }
                      else if(z=~"G") {
                        dG=p13;
                        dist_T_score += dG;
                      }
                      else if(z=~"T") {
                        dG=p14;
                        dist_T_score += dG;
                      }
               }
                 else if (y=~"C"){
                      if(z=~"A") {
                        dG=p21;
                        dist_T_score += dG;
                      }
                      else if(z=~"C") {
                        dG=p22;
                        dist_T_score += dG;
                      }
                      else if(z=~"G") {
                        dG=p23;
                        dist_T_score += dG;
                      }
                      else if(z=~"T") {
                        dG=p24;
                        dist_T_score += dG;
                      }
                }                 
                else if (y=~"G"){
                       if(z=~"A") {
                         dG=p31;
                        dist_T_score += dG;
                       }
                       else if(z=~"C") {
                         dG=p32;
                        dist_T_score += dG;
                       }
                       else if(z=~"G") {
                         dG=p33;
                        dist_T_score += dG;
                       }
                       else if(z=~"T") {
                         dG=p34;
                        dist_T_score += dG;
                       }
                }                 
              }
        }

        {
          ### Free energy and score=dG for a extra T's ###
                        extra_T_score = 0.0;

                        len8=length(ss[8]);
         for (i=1; i<=(len8-1); i++)    {
                 y=ss[8,i,1];
                 z = ss[8,i+1,1];
              if (y=~"T")   {
                      if(z=~"A") {
                        dG=p41;
                        extra_T_score += dG;
                      }
                      else if(z=~"C") {
                        dG=p42;
                        extra_T_score += dG;
                       }
                       else if(z=~"G") {
                        dG=p43;
                        extra_T_score += dG;
                       }
                       else if(z=~"T") {
                        dG=p44;
                        extra_T_score += dG;
                       }
               }
                 else if (y=~"A"){
                      if(z=~"A") {
                        dG=p11;
                        extra_T_score += dG;
                      }
                      else if(z=~"C") {
                        dG=p12;
                        extra_T_score += dG;
                      }
                      else if(z=~"G") {
                        dG=p13;
                        extra_T_score += dG;
                      }
                      else if(z=~"T") {
                        dG=p14;
                        extra_T_score += dG;
                      }
                 }
                        else if (y=~"C")   {
                      if(z=~"A") {
                        dG=p21;
                        extra_T_score += dG;
                      }
                      else if(z=~"C") {
                        dG=p22;
                        extra_T_score += dG;
                      }
                      else if(z=~"G") {
                        dG=p23;
                        extra_T_score += dG;
                      }
                      else if(z=~"T") {
                        dG=p24;
                        extra_T_score += dG;
                      }
                  }                 
                        else if (y=~"G"){
                      if(z=~"A") {
                        dG=p31;
                        extra_T_score += dG;
                      }
                      else if(z=~"C") {
                        dG=p32;
                        extra_T_score += dG;
                      }
                      else if(z=~"G") {
                        dG=p33;
                        extra_T_score += dG;
                      }
                      else if(z=~"T") {
                        dG=p34;
                        extra_T_score += dG;
                      }
                   }                 
              }




### Combined dG_scores for 5 parts:dG_hairpin-[(dG_spacer)+(dG_proxy_T)+(dG_distal_T)+(dG_extra_T)]#

        dG_score = hairpin_score - spacer_score - proxy_T_score - (0.5 * dist_T_score) - (0.05 * extra_T_score);

                        if (dG_score >= -1.0)
                                REJECT;

## Combined struct_scores for 3 parts considering structural parameters: how far stem lengths are from max in experimental stem distribution (7bp)+ how far loop lengths are from experimental optimum (4 nt) and number of A's in A-string ##
                {
                        struct_score=0.0;
                 if (stem_score > 11.0)
                stem_dev =(11.0 - stem_score);
                   else if (stem_score <=11.0)
                        stem_dev = 0.0;       
                }
                {
                if (loop_score > 6.0)
                loop_dev =(6.0 - loop_score);
                   else if (loop_score <=6.0)
                        loop_dev = 0.0; 
                }
                {
               A_dev = 0.2 * (A_score);
                }

         struct_score = stem_dev + loop_dev + A_dev; 
 
spacer = " |  ";

       {
    SCORE = sprintf('%s %3.2f %s %3.2f %s %3.2f %s %3.2f %s %3.2f %s %3.2f %s %3.1f %s %3.1f %s %3.1f %s %3.1f %s', spacer, hairpin_score, spacer, spacer_score, spacer, proxy_T_score, spacer, dist_T_score, spacer, extra_T_score, spacer, dG_score, spacer, stem_score, spacer, loop_score, spacer, A_score, spacer, struct_score, spacer);

        }
   }
